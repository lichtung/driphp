<?php
/**
 * User: linzhv@qq.com
 * Date: 2018/3/5 0005
 * Time: 17:44
 */
declare(strict_types=1);


namespace sharin\library;

/**
 * Class MessageQueue 消息队列
 *
 * 在遇到高并发的情况下，程序往往无法及时处理，这个时候需要一个中间件进行分流和减压
 * 将消息放入中间件之后可以直接返回插入结果，不需要返回立即处理结果
 *
 * 业务系统 =(入队)=>  消息队列 =(出队)=> 队列处理系统
 *
 * 使用场景：
 *  解耦：分离业务系统和队列处理系统
 *  流量削峰：出现在秒杀或者抢购系统中，会出现明显得到流量剧增，对服务器瞬间压力非常大
 *  异步通信：适合异步的都可以使用队列
 *  排序保证：避免出现顺序问题
 *
 * 队列介质：
 *  MySQL:可靠性高，速度慢
 *  Redis：缓存快，单条大消息处理效率高
 *  消息系统（RabbitMQ）
 *
 * 处理触发机制：
 *  死循环读取：易实现，服务器压力大，适合秒杀系统
 *  定时任务：XXX
 *  守护进程：类似PHP-FPM
 *
 *
 *
 * @package sharin\library
 */
class MessageQueue
{

}