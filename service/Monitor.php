<?php
/**
 * User: linzhv@qq.com
 * Date: 05/05/2018
 * Time: 12:59
 */
declare(strict_types=1);


namespace driphp\service;

/**
 * Class Monitor Server Runtime Environment Monitor
 *
 *
 *
 * @package driphp\service
 */
class Monitor
{
    /**
     * 报告CPU和IO统计情况
     * Report Central Processing Unit (CPU) statistics and input/output statistics for devices and partitions.
     *
     * Description:
     * The iostat command is used for monitoring system input/output device loading by observing the time the devices
     * are  active in relation to their average transfer rates. The iostat command generates reports that can be used
     * to change system configuration to better balance the input/output load between physical disks.
     *
     * The first report generated by the iostat command provides statistics concerning the time since the system  was
     * booted,  unless  the  -y  option is used (in this case, this first report is omitted).  Each subsequent report
     * covers the time since the previous report. All statistics are reported each time the iostat  command  is  run.
     * The  report  consists  of a CPU header row followed by a row of CPU statistics. On multiprocessor systems, CPU
     * statistics are calculated system-wide as averages among all processors. A device header row is displayed  fol‐
     * lowed by a line of statistics for each device that is configured.
     *
     * The  interval parameter specifies the amount of time in seconds between each report. The first report contains
     * statistics for the time since system startup (boot), unless the -y option is used (in this case,  this  report
     * is  omitted).   Each  subsequent  report  contains statistics collected during the interval since the previous
     * report. The count parameter can be specified in conjunction with the interval parameter. If the count  parame‐
     * ter  is specified, the value of count determines the number of reports generated at interval seconds apart. If
     * the interval parameter is specified without the count parameter, the iostat command generates reports continu‐
     * ously.
     *
     *
     *
     * @return void
     */
    public function iostat()
    {

    }
}