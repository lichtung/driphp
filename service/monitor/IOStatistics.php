<?php
/**
 * User: linzhv@qq.com
 * Date: 05/05/2018
 * Time: 13:20
 */
declare(strict_types=1);


namespace sharin\service\monitor;

use sharin\core\Service;

/**
 * Class IOStatistics iostat 报告
 *
 *
 * TODO：
 * @method IOStatistics getInstance(array $config = []) static
 * @package sharin\service\monitor
 */
class IOStatistics extends Service
{
    /**
     * iostat命令生成的第一份报告是CPU的使用率
     * The first report generated by the iostat command is the CPU Utilization Report.
     * 多核处理器的系统中，该报告使用的是平均的水平
     * For multiprocessor systems, the CPU values are global averages among all processors.
     * @var array
     */
    protected $cpuReport = [
        'user' => 0.0,#
        'nice' => 0.0, # NICE优先级的用户进程所占用的CPU时间比重 | Show the percentage of CPU utilization that occurred while executing at the user level with nice priority.
        'system' => 0.0, # 系统进程(内核)所占用的CPU时间比重 | Show the percentage of CPU utilization that occurred while executing at the system level (kernel).
        'iowait' => 0.0,# IO等待中的进程所占用的CPU时间比重 | Show the percentage of time that the CPU or CPUs were idle during which the system had an outstanding disk I/O request.
        'steal' => 0.0, #  虚拟CPU上花费的资源(虚拟机/Docker) | Show the percentage of time spent in involuntary wait by the virtual CPU or CPUs while the hypervisor was servicing another virtual processor.
        'idle' => 0.0, # CPU空闲占比 | Show the percentage of time that the CPU or CPUs were idle and the system did not have an outstanding disk I/O request.
    ];

    public function run()
    {
        $output = shell_exec('iostat');
echo $output;
    }

    /**
     * 用户进程所占用的CPU时间比重
     * Show the percentage of CPU utilization that occurred while executing at the user level (application).
     * @return float|mixed
     */
    public function cpuOnUser()
    {
        return $this->cpuReport['user'] ?? 0.0;
    }

    /**
     * The second report generated by the iostat command is the Device Utilization Report(设备使用率报告).
     *
     * The device report provides statistics on a per physical device or partition basis. Block devices and
     * partitions  for  which statistics are to be displayed may be entered on the command line.  If no device nor partition is entered, then statistics are displayed for every device used by
     * the system, and providing that the kernel maintains statistics for it.  If the ALL keyword is given on the command line, then statistics are displayed for every device defined  by  the
     * system,  including  those  that  have never been used.  Transfer rates are shown in 1K blocks by default, unless the environment variable POSIXLY_CORRECT is set, in which case 512-byte
     * blocks are used.  The report may show the following fields, depending on the flags used:
     *
     * Device:
     * This column gives the device (or partition) name as listed in the /dev directory.
     *
     * tps
     * Indicate the number of transfers per second that were issued to the device. A transfer is an I/O request to the device. Multiple logical requests can be combined into  a  single
     * I/O request to the device. A transfer is of indeterminate size.
     *
     * Blk_read/s (kB_read/s, MB_read/s)
     * Indicate the amount of data read from the device expressed in a number of blocks (kilobytes, megabytes) per second. Blocks are equivalent to sectors and therefore have a size of
     * 512 bytes.
     *
     * Blk_wrtn/s (kB_wrtn/s, MB_wrtn/s)
     * Indicate the amount of data written to the device expressed in a number of blocks (kilobytes, megabytes) per second.
     *
     * Blk_read (kB_read, MB_read)
     * The total number of blocks (kilobytes, megabytes) read.
     *
     * Blk_wrtn (kB_wrtn, MB_wrtn)
     * The total number of blocks (kilobytes, megabytes) written.
     *
     * rrqm/s
     * The number of read requests merged per second that were queued to the device.
     *
     * wrqm/s
     * The number of write requests merged per second that were queued to the device.
     *
     * r/s
     * The number (after merges) of read requests completed per second for the device.
     *
     * w/s
     * The number (after merges) of write requests completed per second for the device.
     *
     * rsec/s (rkB/s, rMB/s)
     * The number of sectors (kilobytes, megabytes) read from the device per second.
     *
     * wsec/s (wkB/s, wMB/s)
     * The number of sectors (kilobytes, megabytes) written to the device per second.
     *
     *   avgrq-sz
     * The average size (in sectors) of the requests that were issued to the device.
     *
     * avgqu-sz
     * The average queue length of the requests that were issued to the device.
     *
     * await
     * The average time (in milliseconds) for I/O requests issued to the device to be served. This includes the time spent by the requests in queue and the time spent servicing them.
     *
     * r_await
     * The average time (in milliseconds) for read requests issued to the device to be served. This includes the time spent by the requests in queue and the time spent servicing them.
     *
     * w_await
     * The average time (in milliseconds) for write requests issued to the device to be served. This includes the time spent by the requests in queue and the time spent servicing them.
     *
     * svctm
     * The average service time (in milliseconds) for I/O requests that were issued to the device. Warning! Do not trust this field any more.  This field will be removed  in  a  future
     * sysstat version.
     *
     * %util
     * Percentage of elapsed time during which I/O requests were issued to the device (bandwidth utilization for the device). Device saturation occurs when this value is close to 100%.
     *
     * @var array
     */
    protected $deviceReport = [

    ];


}